// <auto-generated />
using Laba2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Laba2.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20200426202748_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Laba2.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnName("client_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Laba2.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("Laba2.ServiceRequest", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnName("service_id")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnName("request_id")
                        .HasColumnType("int");

                    b.HasKey("ServiceId", "RequestId");

                    b.HasIndex("RequestId");

                    b.ToTable("ServiceRequest");
                });

            modelBuilder.Entity("Laba2.Сlient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Laba2.Request", b =>
                {
                    b.HasOne("Laba2.Сlient", "Сlient")
                        .WithMany("Requests")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Requests_Clients")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Laba2.ServiceRequest", b =>
                {
                    b.HasOne("Laba2.Request", "Request")
                        .WithMany("ServiceRequest")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_ServiceRequest_Requests")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Laba2.Service", "Service")
                        .WithMany("ServiceRequest")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_ServiceRequest_Services")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
